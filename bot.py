import telebot
from config import token
from logic import facts
from logic import DB_Manager
from translate import Translator
from config import db


from random import randint
import sqlite3 



user_facts = {}  
bot = telebot.TeleBot(token)

def translate_text(text, from_lang='en', to_lang='ru'):
    translator = Translator(from_lang=from_lang, to_lang=to_lang)
    try:
        translated_text = translator.translate(text)
        return translated_text 
    except Exception:
        return f"–Ω–µ —É–∫–∞–∑–∞–Ω–æ"

def send_facts(chat_id):
    markup = telebot.types.InlineKeyboardMarkup()
    for index, fact in enumerate(facts):
        markup.add(telebot.types.InlineKeyboardButton(fact.text, callback_data=str(index)))
    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    chat_id = call.message.chat.id
    selected_index = int(call.data)  
    if 0 <= selected_index < len(facts):
        response = facts[selected_index].response
        bot.send_message(chat_id, response)
    else:
        bot.send_message(chat_id, "–í—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–∫—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")

def senf_info(bot, message, row):
    overview = translate_text(row[7])
    if overview == 'QUERY LENGTH LIMIT EXCEEDED. MAX ALLOWED QUERY : 500 CHARS':
        overview = row[7]
    bot.send_message(message.chat.id, f'–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞: {row[1]}üé•\n\n–î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞: {row[4]}üìÜ\n\n–ö—Ä–∞—Ç–∫–∏–π —Å—é–∂–µ—Çüì∫:\n{overview}')


@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id, """–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π! —Ç–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç-–∫–∏–Ω–æ–º–∞–Ω! –≤—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –∫–æ–º–∞–Ω–¥ –∏–ª–∏ –∂–µ –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞, —á—Ç–æ–±—ã —è –ø–æ–ø—ã—Ç–∞–ª—Å—è –µ–≥–æ –Ω–∞–π—Ç–∏:
                    /random - –≤—ã–≤–µ—Å—Ç–∏ —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º –∏–∑ –≤—Å–µ–≥–æ —Å–ø–∏—Å–∫–∞
                    /facts - —É–∑–Ω–∞—Ç—å –ø–∞—Ä–æ—á–∫—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Ñ–∞–∫—Ç–æ–≤ –æ —Ñ–∏–ª—å–º–∞—Ö!
                    /genre - –Ω–∞–π—Ç–∏ —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –∂–∞–Ω—Ä–∞""")
    
@bot.message_handler(commands=['genre'])
def addtask_command(message):
    bot.send_message(message.chat.id,"–í—ã–±–µ—Ä–∏ –∂–∞–Ω—Ä –∏–Ω—Ç–µ—Ä–∏—Å—É—é—â–µ–≥–æ —Ñ–∏–ª—å–º–∞\n–≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–∞–ø–∏—à–∏ —Ü–∏—Ñ—Ä—É –∂–∞–Ω—Ä–∞")

    bot.send_message(message.chat.id,
"""1.–ê–Ω–∏–º–∞—Ü–∏—è
2.–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è
3.–ö–æ–º–µ–¥–∏—è
4.–ë–æ–µ–≤–∏–∫
5.–¢—Ä–∏–ª–ª–µ—Ä
6.–î—Ä–∞–º–∞
7.–†–æ–º–∞–Ω—Ç–∏–∫–∞
8.–ë–∏–æ–≥—Ä–∞—Ñ–∏—è
9.–ò—Å—Ç–æ—Ä–∏—è
10.–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ
11.–¢–∞–π–Ω–∞
12.–°–µ–º—å—è
13.–í–æ–π–Ω–∞
14.–§—ç–Ω—Ç–µ–∑–∏
15.–ú—É–∑—ã–∫–∞
16.–£–∂–∞—Å—ã
17.–°–ø–æ—Ä—Ç
18.–ù–∞—É—á–Ω–∞—è —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞
19.–î–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π —Ñ–∏–ª—å–º
20.–í–µ—Å—Ç–µ—Ä–Ω
21.–ú—é–∑–∏–∫–ª
22.–§–∏–ª—å–º-–Ω—É–∞—Ä
23.–ö–æ—Ä–æ—Ç–∫–æ–º–µ—Ç—Ä–∞–∂–∫–∞
24.–ù–æ–≤–æ—Å—Ç–∏""")
    
    bot.register_next_step_handler(message, promt)
    
def promt(message):
    promt1 = message.text
    movie = manager.get_film(int(promt1))
    date = manager.get_date(int(promt1),movie[1])
    overview = manager.get_overview(int(promt1),movie[1])
    if overview != '–Ω–µ —É–∫–∞–∑–∞–Ω–æ':
        overview = translate_text(overview)
    if overview == 'QUERY LENGTH LIMIT EXCEEDED. MAX ALLOWED QUERY : 500 CHARS':
        overview = manager.get_overview(int(promt1),movie[1])
    bot.send_message(message.chat.id, f'–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞: {movie[0]}üé•\n\n–î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞: {date}üìÜ\n\n–ö—Ä–∞—Ç–∫–∏–π —Å—é–∂–µ—Çüì∫:\n{overview}')

@bot.message_handler(commands=['random'])
def random_movie(message):
    con = sqlite3.connect("movie.db")
    with con:
        cur = con.cursor()
        cur.execute(f"SELECT * FROM movies ORDER BY RANDOM() LIMIT 1")
        row = cur.fetchall()[0]
        cur.close()
    senf_info(bot, message, row)

@bot.message_handler(commands=['facts'])
def facts_command(message):
    send_facts(message.chat.id)

@bot.message_handler(func=lambda message: True)
def echo_message(message):

    con = sqlite3.connect("movie.db")
    with con:
        cur = con.cursor()
        cur.execute(f"select * from movies where LOWER(title) = '{message.text.lower()}'")
        row = cur.fetchall()
        if row:
            row = row[0]
            bot.send_message(message.chat.id,"–î–∞, —è –∑–Ω–∞—é —Ç–∞–∫–æ–π —Ñ–∏–ª—å–º!")
            senf_info(bot, message, row)
        else:
            bot.send_message(message.chat.id,"–•–º, –Ω–µ –ø—Ä–∏–ø–æ–º–∏–Ω–∞—é —Ç–∞–∫–æ–≥–æ —Ñ–∏–ª—å–º–∞...")

        cur.close()


manager = DB_Manager(db)

bot.infinity_polling()